{"version":3,"sources":["components/ResultList.js","utils/API.js","components/DirectoryContainer.js","App.js","index.js"],"names":["ResultList","props","className","display","map","result","Card","style","width","Img","variant","src","picture","large","Body","Title","name","first","last","Text","location","city","state","login","uuid","num","axios","get","DirectoryContainer","sortAsc","apiList","search","qry","API","then","res","setState","data","results","catch","err","console","log","handleInputChange","event","target","value","filter","person","toLowerCase","includes","toggleSort","newSortArr","newSort","sort","a","b","this","Jumbotron","fluid","Container","onChange","type","placeholder","Button","onClick","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAsBeA,MAlBf,SAAoBC,GAClB,OACE,oBAAIC,UAAU,aAAd,SACGD,EAAME,QAAQC,KAAI,SAAAC,GAAM,OACvB,eAACC,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,SAAtB,UACA,cAACF,EAAA,EAAKG,IAAN,CAAUC,QAAQ,MAAMC,IAAKN,EAAOO,QAAQC,QAC1C,eAACP,EAAA,EAAKQ,KAAN,WACE,eAACR,EAAA,EAAKS,MAAN,WAAaV,EAAOW,KAAKC,MAAzB,IAAiCZ,EAAOW,KAAKE,QAC7C,eAACZ,EAAA,EAAKa,KAAN,yBACcd,EAAOe,SAASC,KAD9B,IACqChB,EAAOe,SAASE,MADrD,KAC8DjB,EAAOe,SAASE,cAL5CjB,EAAOkB,MAAMC,Y,iBCN5C,EACL,SAASC,GACf,OAAOC,IAAMC,IAAN,6CAAgDF,K,uBC2F5CG,E,4MAtFbN,MAAQ,CACNO,SAAS,EACTZ,MAAO,GACPC,KAAM,GACNY,QAAS,GACT3B,QAAS,I,EASX4B,OAAS,SAAAC,GACPC,EAAWD,GACRE,MAAK,SAAAC,GACJ,EAAKC,SACH,CAAEjC,QAAQ,YAAKgC,EAAIE,KAAKC,SAAUR,QAAQ,YAAKK,EAAIE,KAAKC,cAG3DC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,O,EAI9BG,kBAAoB,SAAAC,GAClB,IAAM5B,EAAO4B,EAAMC,OAAO7B,KACpB8B,EAAQF,EAAMC,OAAOC,MAC3B,EAAKV,SAAL,eAAgBpB,EAAO8B,IACvB,EAAKV,SACH,CAAEjC,QAAS,EAAKmB,MAAMQ,QAAQiB,QAC5B,SAAAC,GAAM,OAAIA,EAAOhC,KAAKA,GAAMiC,cAAcC,SAASJ,EAAMG,qB,EAK/DE,WAAa,WACX,IAAIC,EACAC,GAAW,EAAK/B,MAAMO,QAExBuB,EADEC,EACW,EAAK/B,MAAMnB,QAAQmD,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEvC,KAAKE,KAAOsC,EAAExC,KAAKE,KAAQ,GAAK,KAErE,EAAKI,MAAMnB,QAAQmD,MAAK,SAACE,EAAGD,GAAJ,OAAWA,EAAEvC,KAAKE,KAAOsC,EAAExC,KAAKE,KAAQ,GAAK,KAGpF,EAAKkB,SAAS,CACZjC,QAASiD,EACTvB,QAASwB,K,kEArCXI,KAAK1B,OAAO,M,+BA0CZ,OACE,gCACE,cAAC2B,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,eAACC,EAAA,EAAD,WACE,yDACA,yEAIA,uBAAM1D,UAAU,OAAhB,UACE,uBACE4C,MAAOW,KAAKnC,MAAML,MAClBD,KAAK,QACL6C,SAAUJ,KAAKd,kBACfmB,KAAK,OACLC,YAAY,sBAEd,uBACEjB,MAAOW,KAAKnC,MAAMJ,KAClBF,KAAK,OACL6C,SAAUJ,KAAKd,kBACfmB,KAAK,OACLC,YAAY,wBAGhB,cAACC,EAAA,EAAD,CAAQtD,QAAQ,UAAUuD,QAAUR,KAAKN,WAAzC,0CAGJ,cAAC,EAAD,CAAYhD,QAASsD,KAAKnC,MAAMnB,iB,GAjFP+D,aCDlBC,MAJf,WACE,OAAO,cAAC,EAAD,K,YCGTC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.947e0835.chunk.js","sourcesContent":["import React from \"react\";\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\n\nfunction ResultList(props) {\n  return (\n    <ul className=\"list-group\">\n      {props.display.map(result => (\n        <Card style={{ width: '25rem' }} key={result.login.uuid}>\n        <Card.Img variant=\"top\" src={result.picture.large} />\n          <Card.Body>\n            <Card.Title>{result.name.first} {result.name.last}</Card.Title>\n            <Card.Text>\n              Located in {result.location.city} {result.location.state}, {result.location.state}\n            </Card.Text>\n          </Card.Body>\n        </Card>\n      ))}\n    </ul>\n  );\n}\n\nexport default ResultList;","import axios from \"axios\";\n\nexport default {\n  search: function(num) {\n    return axios.get(`https://randomuser.me/api/?results=${num}`);\n  }\n};","import React, { Component } from \"react\";\nimport ResultList from \"./ResultList\";\nimport API from \"../utils/API\";\n\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Container from 'react-bootstrap/Container'\nimport Button from 'react-bootstrap/Button'\n\nclass DirectoryContainer extends Component {\n  state = {\n    sortAsc: true,\n    first: \"\",\n    last: \"\",\n    apiList: [],\n    display: []\n  };\n\n  // When this component mounts, search 20 rados\n  componentDidMount() {\n    this.search(20);\n  }\n\n  //Search API and update state with results\n  search = qry => {\n    API.search(qry)\n      .then(res => {\n        this.setState(\n          { display: [...res.data.results], apiList: [...res.data.results] }\n        );\n      })\n      .catch(err => console.log(err));\n  };\n\n  //Update UI based input from user\n  handleInputChange = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n    this.setState({[name]: value});\n    this.setState(\n      { display: this.state.apiList.filter(\n        person => person.name[name].toLowerCase().includes(value.toLowerCase())) }\n    );\n  };\n\n  //Toggle display list from ASC to DESC\n  toggleSort = () => {\n    let newSortArr;\n    let newSort = !this.state.sortAsc;\n    if (newSort) {\n      newSortArr = this.state.display.sort((a, b) => (a.name.last > b.name.last) ? 1 : -1);\n    } else {\n      newSortArr = this.state.display.sort((b, a) => (a.name.last > b.name.last) ? 1 : -1);\n\n    }\n    this.setState({\n      display: newSortArr,\n      sortAsc: newSort\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <Jumbotron fluid>\n          <Container>\n            <h1>Random People Directory</h1>\n            <p>\n              This is a random list of people to view.\n            </p>\n            \n            <form className=\"form\">\n              <input\n                value={this.state.first}\n                name=\"first\"\n                onChange={this.handleInputChange}\n                type=\"text\"\n                placeholder=\"Filter First Name\"\n              />\n              <input\n                value={this.state.last}\n                name=\"last\"\n                onChange={this.handleInputChange}\n                type=\"text\"\n                placeholder=\"Filter Last Name\"\n              />\n            </form>\n            <Button variant=\"primary\" onClick={(this.toggleSort)}>Toggle Sorted Last Name</Button>\n          </Container>\n        </Jumbotron>\n        <ResultList display={this.state.display} />\n      </div>\n    );\n  }\n}\n\nexport default DirectoryContainer;\n","import React from 'react';\nimport DirectoryContainer from \"./components/DirectoryContainer\";\n\nfunction App() {\n  return <DirectoryContainer />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}